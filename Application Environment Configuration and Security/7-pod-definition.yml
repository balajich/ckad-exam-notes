# use secrets to pass the database connection details to the python application
# mount the secrets as files in the python application
# Access application from minikube using the following command:
# minikube service python-app-service
# Sample URL will be http://127.0.0.1:52598/customers (port number will be different)
# use base64 to encode the values, example: echo -n 'rootpass' | base64

# create database details secret
apiVersion: v1
kind: Secret
metadata:
  name: db-details-secret
data:
  MYSQL_HOST: bG9jYWxob3N0
  MYSQL_USER: cm9vdA==
  MYSQL_PASSWORD: cm9vdHBhc3M=
  MYSQL_DB: Y2xhc3NpY21vZGVscw==

---
# pod definition
apiVersion: v1
kind: Pod
metadata:
  name: python-app-pod
  labels:
    app: python-app-pod
spec:
  containers:
    - name: mysql
      image: balajich/mysql-db:latest
      env:
        - name: MYSQL_ROOT_PASSWORD
          value: "rootpass"
        - name: MYSQL_DATABASE
          value: "classicmodels"
      ports:
        - containerPort: 3306

    - name: python-app
      image: balajich/python-app:2.0
      volumeMounts: # mount the secrets as files in the python application
        - name: db-details-secret-mount
          mountPath: "/etc/secrets"
          readOnly: true
      ports:
        - containerPort: 5000
  volumes:
    - name: db-details-secret-mount # define the volume to mount the secrets
      secret:
        secretName: db-details-secret

---
# expose python-app-pod to the outside world
apiVersion: v1
kind: Service
metadata:
  name: python-app-service
spec:
  selector:
    app: python-app-pod
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer